source("TAKI_Ultility.R")
###Mortatlity
proj_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/Intermediate_Results/Prediction_results0806/CV_performance/"
perf_dir <- paste0(proj_dir, "mortality/AllClinicalFeature/")
outdir   <- paste0(proj_dir,"mortality/")
method_names <- c("LogReg","RF","SVM","XGB")
imporatnce_list <- list()
for (i in 1:length(method_names)){
curr_file <- paste0(perf_dir,"Importance_AVG_",method_names[i],".csv")
curr_tb <- read.csv(curr_file,stringsAsFactors = F)
curr_tb[,2] <- round(curr_tb[,2],2)
curr_tb <- change_listoffeature_name_intable2(curr_tb)
imporatnce_list[[i]] <- curr_tb
}
all_importance_df <- do.call(cbind,imporatnce_list)
top15_importance_df <- all_importance_df[1:15,]
setwd("~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code")
source("TAKI_Ultility.R")
###Mortatlity
proj_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/Intermediate_Results/Prediction_results0806/CV_performance/"
perf_dir <- paste0(proj_dir, "mortality/AllClinicalFeature/")
outdir   <- paste0(proj_dir,"mortality/")
method_names <- c("LogReg","RF","SVM","XGB")
imporatnce_list <- list()
for (i in 1:length(method_names)){
curr_file <- paste0(perf_dir,"Importance_AVG_",method_names[i],".csv")
curr_tb <- read.csv(curr_file,stringsAsFactors = F)
curr_tb[,2] <- round(curr_tb[,2],2)
curr_tb <- change_listoffeature_name_intable2(curr_tb)
imporatnce_list[[i]] <- curr_tb
}
all_importance_df <- do.call(cbind,imporatnce_list)
top15_importance_df <- all_importance_df[1:15,]
library(VennDiagram)
source("TAKI_Ultility.R")
library(VennDiagram)
###Mortatlity
proj_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/Intermediate_Results/Prediction_results0806/CV_performance/"
perf_dir <- paste0(proj_dir, "mortality/AllClinicalFeature/")
outdir   <- paste0(proj_dir,"mortality/")
method_names <- c("LogReg","RF","SVM","XGB")
imporatnce_list <- list()
for (i in 1:length(method_names)){
curr_file <- paste0(perf_dir,"Importance_AVG_",method_names[i],".csv")
curr_tb <- read.csv(curr_file,stringsAsFactors = F)
curr_tb[,2] <- round(curr_tb[,2],2)
curr_tb <- change_listoffeature_name_intable2(curr_tb)
imporatnce_list[[i]] <- curr_tb
}
all_importance_df <- do.call(cbind,imporatnce_list)
top15_importance_df <- all_importance_df[1:15,]
#write.csv(top15_importance_df,paste0(outdir,"Top15FeatureRanking_4Methods.csv"),row.names = F)
View(top15_importance_df)
#Venn
draw.triple.venn(
area1 = top15_importance_df[1,],        # Size of the circle1.
area2 = top15_importance_df[3,],        # Size of the circle2.
area3 = top15_importance_df[5,],        # Size of the circle3.
category = c("United States", "Canada", "Russia"), # Label text.
lty = "blank",           # Hide the border of circles.
fill = c("light blue", "#99ff99", "pink"),   # Color
fontfamily = "Arial",    # Font name for numbers.
cat.fontface="bold",     # Font style for labels.
cat.fontfamily ="Arial"  # Font name for labels.
)
area1
top15_importance_df[1,]
intersect(top15_importance_df[,1],top15_importance_df[,3])
#Venn
length(intersect(intersect(top15_importance_df[,1],top15_importance_df[,3]),top15_importance_df[,5] ))
#Venn
draw.triple.venn(
area1 = top15_importance_df[,1],        # Size of the circle1.
area2 = top15_importance_df[,3],        # Size of the circle2.
area3 = top15_importance_df[,5],        # Size of the circle3.
n12 = length(intersect(top15_importance_df[,1],top15_importance_df[,3])),      # Size of the overlapping area of circle1 and 2.
n23 = length(intersect(top15_importance_df[,3],top15_importance_df[,5])),      # Size of the overlapping area of circle2 and 3.
n13 = length(intersect(top15_importance_df[,1],top15_importance_df[,5])),      # Size of the overlapping area of circle1 and 3.
n123 = length(intersect(intersect(top15_importance_df[,1],top15_importance_df[,3]),top15_importance_df[,5] )), # Size of the overlapping area of circle1, 2, 3.
category = c("United States", "Canada", "Russia"), # Label text.
lty = "blank",           # Hide the border of circles.
fill = c("light blue", "#99ff99", "pink"),   # Color
fontfamily = "Arial",    # Font name for numbers.
cat.fontface="bold",     # Font style for labels.
cat.fontfamily ="Arial"  # Font name for labels.
)
#Venn
draw.triple.venn(
area1 = 15,        # Size of the circle1.
area2 = 15,        # Size of the circle2.
area3 = 15,        # Size of the circle3.
n12 = length(intersect(top15_importance_df[,1],top15_importance_df[,3])),      # Size of the overlapping area of circle1 and 2.
n23 = length(intersect(top15_importance_df[,3],top15_importance_df[,5])),      # Size of the overlapping area of circle2 and 3.
n13 = length(intersect(top15_importance_df[,1],top15_importance_df[,5])),      # Size of the overlapping area of circle1 and 3.
n123 = length(intersect(intersect(top15_importance_df[,1],top15_importance_df[,3]),top15_importance_df[,5] )), # Size of the overlapping area of circle1, 2, 3.
category = c("United States", "Canada", "Russia"), # Label text.
lty = "blank",           # Hide the border of circles.
fill = c("light blue", "#99ff99", "pink"),   # Color
fontfamily = "Arial",    # Font name for numbers.
cat.fontface="bold",     # Font style for labels.
cat.fontfamily ="Arial"  # Font name for labels.
)
require(venneuler)
install.packages("venneuler")
require(venneuler)
#here I replicate your data
#because it's repeatable, you can use `rep` function to generate it
c1 <- rep(c(0,1),each=8)
c2 <- rep(c(0,1),each=4,times=2)
c3 <- rep(c(0,1),each=2,times=4)
c4 <- rep(c(0,1),times=8)
#put your data into matrix
m <- as.matrix(data.frame(C1=c1,C2=c2,C3=c3,C4=c4))
#plot it
v = venneuler(m)
plot(v)
#here I replicate your data
#because it's repeatable, you can use `rep` function to generate it
c1 <- rep((top15_importance_df[,1],each=8)
c1
c1 <- top15_importance_df[,1]
c2 <- top15_importance_df[,3]
c3 <- top15_importance_df[,5]
c4 <- top15_importance_df[,7]
#put your data into matrix
m <- as.matrix(data.frame(C1=c1,C2=c2,C3=c3,C4=c4))
#plot it
v = venneuler(m)
plot(v)
c1
require(venneuler)
c1 <- top15_importance_df[,1]
c2 <- top15_importance_df[,3]
c3 <- top15_importance_df[,5]
c4 <- top15_importance_df[,7]
#put your data into matrix
m <- as.matrix(data.frame(C1=c1,C2=c2,C3=c3,C4=c4))
m
#plot it
v = venneuler(m)
# Load library
library(VennDiagram)
# Generate 3 sets of 200 words
set1 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
set2 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
set3 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
# Prepare a palette of 3 colors with R colorbrewer:
library(RColorBrewer)
myCol <- brewer.pal(3, "Pastel2")
# Chart
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#14_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#14_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
# Chart
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#14_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
source('~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/venn.R', echo=TRUE)
source('~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/venn.R', echo=TRUE)
# Chart
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#14_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
getwd()
# Load library
library(VennDiagram)
# Generate 3 sets of 200 words
set1 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
set2 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
set3 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
set4 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
set4
# Prepare a palette of 3 colors with R colorbrewer:
library(RColorBrewer)
myCol <- brewer.pal(3, "Pastel2")
# Chart
venn.diagram(
x = list(set1, set2, set3,set4),
category.names = c("Set 1" , "Set 2 " , "Set 3","set 4"),
filename = '#14_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
venn(5, ilab=TRUE, zcolor = "style")
library(venn)
install.packages("venn")
venn(5, ilab=TRUE, zcolor = "style")
library(venn)
venn(5, ilab=TRUE, zcolor = "style")
venn(4, ilab=TRUE, zcolor = "style")
n12<- 5
n13 <- 5
n14 <- 3
n23 <- 2
n24 <- 1
n34 <- 2
venn(4, ilab=TRUE, zcolor = "style",
counts = c(n12,n13,n14,n23,n24,n34))
venn(4, ilab=TRUE, zcolor = "style",
counts = c(n12,n13,n14,n23,n24,n34))
venn(4, zcolor = "style",
counts = c(n12,n13,n14,n23,n24,n34))
venn(4,
counts = c(n12,n13,n14,n23,n24,n34))
venn(4, zcolor = "style",
counts = c(n12,n13,n14,n23,n24,n34))
venn(4, ilab=TRUE, zcolor = "style",
counts = c(n12,n13,n14,n23,n24,n34))
set_list <- list(set1,set2,set3,set4)
venn(set_list, ilab=TRUE, zcolor = "style")
set_list <- list(top15_importance_df[,1],top15_importance_df[,3],top15_importance_df[,5],
top15_importance_df[,7])
venn(set_list, ilab=TRUE, zcolor = "style")
