curr_id <- analysis_ID[i]
Final_ESRD_BEFORE_AT_df[i,"STUDY_PATIENT_ID"] <- curr_id
#source 1: USRDs
curr_USRDs <- ESRD_BEFORE_AT_Indicator_df1[which(ESRD_BEFORE_AT_Indicator_df1[,"STUDY_PATIENT_ID"] == curr_id),]
curr_USRDs_flag <- curr_USRDs[,"BEFORE_AT_ADMISSION_USRDS"]
curr_USRDs_source <- curr_USRDs[,"SOURCE"]
#source 2: status table
curr_status_tb <- ESRD_BEFORE_AT_Indicator_df2[which(ESRD_BEFORE_AT_Indicator_df2[,"STUDY_PATIENT_ID"] == curr_id),]
curr_status_flag <- curr_status_tb[,"BEFORE_AT_ADMISSION_STATUS"]
curr_status_source<- curr_status_tb[,"SOURCE"]
if (curr_USRDs_source == 1 | curr_status_source==1){
final_flag <- 1
}else{
final_flag <- 0
}
Final_ESRD_BEFORE_AT_df[i,"ESRD_BEFORE_AT"] <- final_flag
}
############################################################################################################
#check how many status_flag=1, but usrd_flag=0, and they are actually in USRDS: 51
#so the final =1 , should equal status_yes (155-51) + USRDS_yes(48+295) = 447
############################################################################################################
table(USRD_BeforeAT,STATUS_BeforeAT)
length(which(ESRD_BEFORE_AT_Indicator_df_Comb$ESRD_BEFORE_AT_STATUS== 1 &
ESRD_BEFORE_AT_Indicator_df_Comb$ESRD_BEFORE_AT_USRDS==0 &
ESRD_BEFORE_AT_Indicator_df_Comb$SOURCE_USRDS == "in_USRDS" ))
table(Final_ESRD_BEFORE_AT_df$ESRD_BEFORE_AT) #7354  447
############################################################################################################
#6. Final before/AT status
#If == 1 in either one
############################################################################################################
Final_ESRD_BEFORE_AT_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID), ncol = 2))
colnames(Final_ESRD_BEFORE_AT_df) <- c("STUDY_PATIENT_ID","ESRD_BEFORE_AT")
for (i in 1:length(analysis_ID)){
if (i %% 1000 == 0) {print(i)}
curr_id <- analysis_ID[i]
Final_ESRD_BEFORE_AT_df[i,"STUDY_PATIENT_ID"] <- curr_id
#source 1: USRDs
curr_USRDs <- ESRD_BEFORE_AT_Indicator_df1[which(ESRD_BEFORE_AT_Indicator_df1[,"STUDY_PATIENT_ID"] == curr_id),]
curr_USRDs_flag <- curr_USRDs[,"BEFORE_AT_ADMISSION_USRDS"]
curr_USRDs_source <- curr_USRDs[,"SOURCE"]
#source 2: status table
curr_status_tb <- ESRD_BEFORE_AT_Indicator_df2[which(ESRD_BEFORE_AT_Indicator_df2[,"STUDY_PATIENT_ID"] == curr_id),]
curr_status_flag <- curr_status_tb[,"BEFORE_AT_ADMISSION_STATUS"]
curr_status_source<- curr_status_tb[,"SOURCE"]
if (curr_USRDs_source == 1 | curr_status_source==1){
final_flag <- 1
}else{
final_flag <- 0
}
Final_ESRD_BEFORE_AT_df[i,"ESRD_BEFORE_AT"] <- final_flag
}
table(Final_ESRD_BEFORE_AT_df$ESRD_BEFORE_AT) #7354  447
############################################################################################################
#6. Final before/AT status
#If == 1 in either one
############################################################################################################
Final_ESRD_BEFORE_AT_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID), ncol = 2))
colnames(Final_ESRD_BEFORE_AT_df) <- c("STUDY_PATIENT_ID","ESRD_BEFORE_AT")
for (i in 1:length(analysis_ID)){
if (i %% 1000 == 0) {print(i)}
curr_id <- analysis_ID[i]
Final_ESRD_BEFORE_AT_df[i,"STUDY_PATIENT_ID"] <- curr_id
#source 1: USRDs
curr_USRDs <- ESRD_BEFORE_AT_Indicator_df1[which(ESRD_BEFORE_AT_Indicator_df1[,"STUDY_PATIENT_ID"] == curr_id),]
curr_USRDs_flag <- curr_USRDs[,"BEFORE_AT_ADMISSION_USRDS"]
curr_USRDs_source <- curr_USRDs[,"SOURCE"]
#source 2: status table
curr_status_tb <- ESRD_BEFORE_AT_Indicator_df2[which(ESRD_BEFORE_AT_Indicator_df2[,"STUDY_PATIENT_ID"] == curr_id),]
curr_status_flag <- curr_status_tb[,"BEFORE_AT_ADMISSION_STATUS"]
curr_status_source<- curr_status_tb[,"SOURCE"]
if (curr_USRDs_flag == 1 | curr_status_flag==1){
final_flag <- 1
}else{
final_flag <- 0
}
Final_ESRD_BEFORE_AT_df[i,"ESRD_BEFORE_AT"] <- final_flag
}
table(Final_ESRD_BEFORE_AT_df$ESRD_BEFORE_AT) #7354  447
447 -498
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
which(analysis_ID %in% Final_ESRD_BEFORE_AT_df$STUDY_PATIENT_ID[which(Final_ESRD_BEFORE_AT_df$ESRD_BEFORE_AT == 1)])
length(which(analysis_ID %in% Final_ESRD_BEFORE_AT_df$STUDY_PATIENT_ID[which(Final_ESRD_BEFORE_AT_df$ESRD_BEFORE_AT == 1)]))
############################################################################################################
#check how many status_flag=1, but usrd_flag=0, and they are actually in USRDS: 51
#so the final =1 , should equal status_yes (155-51) + USRDS_yes(48+295) = 447
############################################################################################################
table(USRD_BeforeAT,STATUS_BeforeAT)
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#3. Load raw DIAGNOSIS data
raw_DIAGNOSIS_df <- read.csv(paste0(raw_dir,"DIAGNOSIS.csv"),stringsAsFactors = F)
#4. Get sepsis df
#sepsis_df <- raw_DIAGNOSIS_df[which(grepl("sepsis",raw_DIAGNOSIS_df[,"DIAGNOSIS_DESC"],ignore.case = T) ==T),]
#'@Updated 080521
#All Sepsis
sepsis_df <- raw_DIAGNOSIS_df[which(grepl("sep",raw_DIAGNOSIS_df[,"DIAGNOSIS_DESC"],ignore.case = T) ==T),]
sepsis_IDs <- unique(sepsis_df$STUDY_PATIENT_ID)
#Before or at admit
sepsis_BeforeAtAdmin_df <- sepsis_df[which(sepsis_df$DIAGNOSIS_TYPE %in% c("06.Working Dx","01.Visit Reason","Admit Dx","..Working Dx")),]
sepsis_beforeat_IDs <- unique(sepsis_BeforeAtAdmin_df$STUDY_PATIENT_ID)
table(sepsis_df$DIAGNOSIS_TYPE)
setwd("~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/Process_UTSW")
library(lubridate)
source("/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UTSW/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#5.ORGANSUPP_VENT
raw_ORGANSUPP_VENT_df <- read.csv(paste0(outdir,"xilong_extracted/Final dataset for Lucas part 3 08122021.csv"),stringsAsFactors = F)
View(raw_ORGANSUPP_VENT_df)
##########################################################################################
#Features to extract :      1.  days MV in ICU D0-D3
##########################################################################################
ECMO_IABP_MV_VAD_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID), ncol = 2))
colnames(ECMO_IABP_MV_VAD_df) <- c("STUDY_PATIENT_ID","Days_MV_ICUD0toD3")
i <- 1
if (i %% 1000== 0){print(i)}
curr_id <- analysis_ID[i]
##########################################################################################
#Features to extract :      1.  days MV in ICU D0-D3
##########################################################################################
MV_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID), ncol = 2))
library(lubridate)
source("/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R")
#data dir
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#5.ORGANSUPP_VENT
raw_ORGANSUPP_VENT_df <- read.csv(paste0(outdir,"xilong_extracted/Final dataset for Lucas part 3 08122021.csv"),stringsAsFactors = F)
##########################################################################################
#Features to extract :      1.  days MV in ICU D0-D3
##########################################################################################
MV_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID), ncol = 2))
colnames(MV_df) <- c("STUDY_PATIENT_ID","Days_MV_ICUD0toD3")
MV_res <- get_onMachine_flag_ICUD0_D3_v2(raw_ORGANSUPP_VENT_df,All_time_df,curr_id,"VENT_START_DATE","VENT_STOP_DATE")
i <- 1
if (i %% 1000== 0){print(i)}
curr_id <- analysis_ID[i]
MV_df[i,"STUDY_PATIENT_ID"] <- curr_id
MV_res <- get_onMachine_flag_ICUD0_D3_v2(raw_ORGANSUPP_VENT_df,All_time_df,curr_id,"VENT_START_DATE","VENT_STOP_DATE")
colnames(raw_ORGANSUPP_VENT_df)
colnames(raw_ORGANSUPP_VENT_df)
colnames(raw_ORGANSUPP_VENT_df)[1:3] <- c("STUDY_PATIENT_ID","VENT_START_DATE","VENT_STOP_DATE")
MV_res <- get_onMachine_flag_ICUD0_D3_v2(raw_ORGANSUPP_VENT_df,All_time_df,curr_id,"VENT_START_DATE","VENT_STOP_DATE")
which(raw_ORGANSUPP_VENT_df$STUDY_PATIENT_ID == curr_id)
raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df$STUDY_PATIENT_ID == curr_id),]
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[,1:3]
View(raw_ORGANSUPP_VENT_df)
which(raw_ORGANSUPP_VENT_df=="")
which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[-which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)]
which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)
raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)]
raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)] <- NA
View(raw_ORGANSUPP_VENT_df)
raw_ORGANSUPP_VENT_df <- read.csv(paste0(outdir,"xilong_extracted/Final dataset for Lucas part 3 08122021.csv"),stringsAsFactors = F)
colnames(raw_ORGANSUPP_VENT_df)[1:3] <- c("STUDY_PATIENT_ID","VENT_START_DATE","VENT_STOP_DATE")
#recode empty MV to NA
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[,1:3]
raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)] <- NA
##############
#remove MV NA rows
all(is.na(raw_ORGANSUPP_VENT_df[,c("VENT_START_DATE","VENT_STOP_DATE")]))
#remove MV NA rows
complete.cases(raw_ORGANSUPP_VENT_df[,"VENT_START_DATE","VENT_STOP_DATE"])
#remove MV NA rows
complete.cases(raw_ORGANSUPP_VENT_df[,c("VENT_START_DATE","VENT_STOP_DATE")])
#remove MV NA rows
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[complete.cases(raw_ORGANSUPP_VENT_df[,c("VENT_START_DATE","VENT_STOP_DATE")]),]
View(raw_ORGANSUPP_VENT_df)
##########################################################################################
#Features to extract :      1.  days MV in ICU D0-D3
##########################################################################################
MV_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID), ncol = 2))
colnames(MV_df) <- c("STUDY_PATIENT_ID","Days_MV_ICUD0toD3")
i <- 1
if (i %% 1000== 0){print(i)}
curr_id <- analysis_ID[i]
MV_df[i,"STUDY_PATIENT_ID"] <- curr_id
MV_res <- get_onMachine_flag_ICUD0_D3_v2(raw_ORGANSUPP_VENT_df,All_time_df,curr_id,"VENT_START_DATE","VENT_STOP_DATE")
MV_res
MV_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID), ncol = 2))
colnames(MV_df) <- c("STUDY_PATIENT_ID","Days_MV_ICUD0toD3")
for (i in 1: length(analysis_ID)){
if (i %% 1000== 0){print(i)}
curr_id <- analysis_ID[i]
MV_df[i,"STUDY_PATIENT_ID"] <- curr_id
MV_res <- get_onMachine_flag_ICUD0_D3_v2(raw_ORGANSUPP_VENT_df,All_time_df,curr_id,"VENT_START_DATE","VENT_STOP_DATE")
MV_df[i,"Days_MV_ICUD0toD3"]   <- MV_res[[2]]
}
MV_res
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
#5.ORGANSUPP_VENT
raw_ORGANSUPP_VENT_df <- read.csv(paste0(raw_dir,"ORGANSUPP_VENT.csv"),stringsAsFactors = F)
View(raw_ORGANSUPP_VENT_df)
library(lubridate)
source("/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R")
#data dir
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#5.ORGANSUPP_VENT
raw_ORGANSUPP_VENT_df <- read.csv(paste0(outdir,"xilong_extracted/Final dataset for Lucas part 3 08122021.csv"),stringsAsFactors = F)
colnames(raw_ORGANSUPP_VENT_df)[1:3] <- c("STUDY_PATIENT_ID","VENT_START_DATE","VENT_STOP_DATE")
#recode empty MV to NA
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[,1:3]
raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)] <- NA
#remove MV NA rows
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[complete.cases(raw_ORGANSUPP_VENT_df[,c("VENT_START_DATE","VENT_STOP_DATE")]),]
#reformat dates to "2014-12-06 00:00:00"
raw_ORGANSUPP_VENT_df$VENT_START_DATE
#reformat dates to "2014-12-06 00:00:00"
raw_ORGANSUPP_VENT_df$VENT_START_DATE[1]
dmy(raw_ORGANSUPP_VENT_df$VENT_START_DAT)
#reformat dates to "2014-12-06 00:00:00"
raw_ORGANSUPP_VENT_df$VENT_START_DATE[1]
dmy(raw_ORGANSUPP_VENT_df$VENT_START_DATE)
dmy(raw_ORGANSUPP_VENT_df$VENT_START_DATE[1])
#reformat dates to "2014-12-06 00:00:00"
raw_ORGANSUPP_VENT_df$VENT_START_DATE[1]
mdy(raw_ORGANSUPP_VENT_df$VENT_START_DATE[1])
#reformat dates to "2014-12-06 00:00:00"
raw_ORGANSUPP_VENT_df$VENT_START_DATE <- mdy(raw_ORGANSUPP_VENT_df$VENT_START_DATE)
raw_ORGANSUPP_VENT_df$VENT_STOP_DATE <- mdy(raw_ORGANSUPP_VENT_df$VENT_STOP_DATE)
raw_ORGANSUPP_VENT_df$VENT_START_DATE
library(lubridate)
source("/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R")
#data dir
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#5.ORGANSUPP_VENT
raw_ORGANSUPP_VENT_df <- read.csv(paste0(outdir,"xilong_extracted/Final dataset for Lucas part 3 08122021.csv"),stringsAsFactors = F)
colnames(raw_ORGANSUPP_VENT_df)[1:3] <- c("STUDY_PATIENT_ID","VENT_START_DATE","VENT_STOP_DATE")
#recode empty MV to NA
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[,1:3]
raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)] <- NA
#remove MV NA rows
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[complete.cases(raw_ORGANSUPP_VENT_df[,c("VENT_START_DATE","VENT_STOP_DATE")]),]
#reformat dates to "2014-12-06 00:00:00"
raw_ORGANSUPP_VENT_df$VENT_START_DATE <- paste(mdy(raw_ORGANSUPP_VENT_df$VENT_START_DATE),"00:00:00")
raw_ORGANSUPP_VENT_df$VENT_STOP_DATE  <- paste(mdy(raw_ORGANSUPP_VENT_df$VENT_STOP_DATE),"00:00:00")
View(raw_ORGANSUPP_VENT_df)
raw_ORGANSUPP_VENT_df$VENT_START_DATE
##########################################################################################
#Features to extract :      1.  days MV in ICU D0-D3
##########################################################################################
MV_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID), ncol = 2))
colnames(MV_df) <- c("STUDY_PATIENT_ID","Days_MV_ICUD0toD3")
for (i in 1: length(analysis_ID)){
if (i %% 1000== 0){print(i)}
curr_id <- analysis_ID[i]
MV_df[i,"STUDY_PATIENT_ID"] <- curr_id
MV_res <- get_onMachine_flag_ICUD0_D3_v2(raw_ORGANSUPP_VENT_df,All_time_df,curr_id,"VENT_START_DATE","VENT_STOP_DATE")
MV_df[i,"Days_MV_ICUD0toD3"]   <- MV_res[[2]]
}
View(MV_df)
write.csv(MV_df,paste0(outdir,"All_MV_Days_in_ICUD0toD3.csv"),row.names = F)
source("TAKI_Ultility.R")
library(lubridate)
#Data dir
UK_data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/Model_Feature_Outcome/"
UTSW_data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/Model_Feature_Outcome/"
#intermediate data dir
UK_intermediate_data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
UTSW_intermediate_data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
#out dir
out_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/Intermediate_Results/Prediction_results0806/Discrip_Stats/"
####################################################################################
#### 1. Load data
####################################################################################
feature_file <- "All_Feature_NOTimputed.csv"
outcome_file <- "All_outcome.csv"
outcome_colname_list <- c("Death_inHOSP","MAKE_HOSP120_Drop50")
#For UK
UK_data <- Combine_featureAndoutcomes_func(UK_data_dir,feature_file,outcome_file,outcome_colname_list)
#For UTSW
UTSW_data <- Combine_featureAndoutcomes_func(UTSW_data_dir,feature_file,outcome_file,outcome_colname_list)
####################################################################################
###3.Add some variables
####################################################################################
#For UK
UK_data <- add_listofvar_func(UK_data,UK_intermediate_data_dir,"UK")
#For UTSW
UTSW_data <- add_listofvar_func(UTSW_data,UTSW_intermediate_data_dir,"UTSW")
setwd("~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code")
source("TAKI_Ultility.R")
library(lubridate)
#Data dir
UK_data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/Model_Feature_Outcome/"
UTSW_data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/Model_Feature_Outcome/"
#intermediate data dir
UK_intermediate_data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
UTSW_intermediate_data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
#out dir
out_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/Intermediate_Results/Prediction_results0806/Discrip_Stats/"
####################################################################################
#### 1. Load data
####################################################################################
feature_file <- "All_Feature_NOTimputed.csv"
outcome_file <- "All_outcome.csv"
outcome_colname_list <- c("Death_inHOSP","MAKE_HOSP120_Drop50")
#For UK
UK_data <- Combine_featureAndoutcomes_func(UK_data_dir,feature_file,outcome_file,outcome_colname_list)
#For UTSW
UTSW_data <- Combine_featureAndoutcomes_func(UTSW_data_dir,feature_file,outcome_file,outcome_colname_list)
####################################################################################
###3.Add some variables
####################################################################################
#For UK
UK_data <- add_listofvar_func(UK_data,UK_intermediate_data_dir,"UK")
#For UTSW
UTSW_data <- add_listofvar_func(UTSW_data,UTSW_intermediate_data_dir,"UTSW")
UK_data <-  recode_KDIGO_func(UK_data,"LAST_KDIGO_ICU_D0toD3")
UK_data <-  recode_KDIGO_func(UK_data,"MAX_KDIGO_ICU_D0toD3")
UTSW_data <-  recode_KDIGO_func(UTSW_data,"LAST_KDIGO_ICU_D0toD3")
UTSW_data <-  recode_KDIGO_func(UTSW_data,"MAX_KDIGO_ICU_D0toD3")
UK_data$RRTinfo_ICUD0toD3
table(UK_data$RRTinfo_ICUD0toD3)
compute_stats_func <- function(input_df,cohort_name,ordered_parameters){
# input_df <- UK_data
# ordered_parameters <- var_list
Final_table <- as.data.frame(matrix(NA, nrow = length(ordered_parameters), ncol = 2))
colnames(Final_table) <- c("Var","Stats")
Final_table$Var <- ordered_parameters
for (i in 1:length(ordered_parameters)){
curr_f <- ordered_parameters[i]
#get index column of current feature
curr_colindex <- which(colnames(input_df) == curr_f)
if (length(curr_colindex) == 0){ #if feature is not in curret data input
Final_table[i,2] <- NA
}else{
#Get current values
if(curr_f == "CRRT_Days_inICUD0toD3"){
CRRT_index <- which(input_df[,"RRTinfo_ICUD0toD3"] %in% c("CRRT_only","HD_and_CRRT")) #inlcude on both pts
curr_values <- input_df[CRRT_index,"CRRT_Days_inICUD0toD3"]
}else if (curr_f == "HD_Days_inICUD0toD3"){
HD_index <- which(input_df[,"RRTinfo_ICUD0toD3"] %in% c("CRRT_only","HD_and_CRRT")) #inlcude on both pts
curr_values <- input_df[HD_index,"HD_Days_inICUD0toD3"]
}else if (curr_f == "Days_MV_ICUD0toD3"){
keep_index <- which(input_df[,"MV_ICUD0toD3"] == 1) #for pts on MV
curr_values <- input_df[keep_index,"Days_MV_ICUD0toD3"]
}else{
curr_values <- input_df[,curr_f]
}
#remove NAs
na_indexes <- which(is.na(curr_values) == T)
if(length(na_indexes) > 0){
curr_values <- curr_values[-na_indexes]
}
#check if catogrical or continous
n_unique_values <- length(unique(curr_values))
if(curr_f == "Total_days_HDandCRRT"){ #becaseu the number of unique value is so small, so manually do this
Final_table[i,2] <- compute_median_p25andp75_func(curr_values,2)
}else if (n_unique_values > 5){ #if continous, report median and Q1Q3
Final_table[i,2] <- compute_median_p25andp75_func(curr_values,2)
}else{
Final_table[i,2] <- compute_n_perc_func(curr_values,2)
}
}
}
colnames(Final_table) <- paste0(cohort_name,"_",colnames(Final_table))
return(Final_table)
}
var_list <- c("AGE","GENDER","RACE","BMI","CHARLSON_SCORE","TOTAL_ELIX","Diabetes","Hypertension","Baseline_eGFR","CKD",
"SOFA_TOTAL","APACHE_TOTAL","Days_inHOSP","Hours_inICUD0toD3","ECMO_ICUD0toD3","IABP_ICUD0toD3","VAD_ICUD0toD3","MV_ICUD0toD3","Days_MV_ICUD0toD3",
"Sepsis_Before_or_At_Admission","UrineOutput_D0toD3","UrineFlow_D0toD3","FluidOverload_inPercentage",
"Bicarbonate_D1_AVGof(LOWHIGH)","BUN_D0toD3_HIGH","Hematocrit_D1_AVGof(LOWHIGH)","Hemoglobin_D1_AVGof(LOWHIGH)",
"Baseline_sCr","Admit_sCr","Peak_SCr_inICU_D0_D3","LastSCr_inICU_D0_D3","MAX_KDIGO_ICU_D0toD3","LAST_KDIGO_ICU_D0toD3",
"onRRT_ICUD0toD3","RRTinfo_ICUD0toD3",
"CRRT_Days_inICUD0toD3","HD_Days_inICUD0toD3")
#For UK
UK_tb4 <- compute_stats_func(UK_data,"UK",var_list)
View(UK_tb4)
#For UTSW
UTSW_tb4 <- compute_stats_func(UTSW_data,"UTSW",var_list)
comb_supptb4 <- cbind(UK_tb4,UTSW_tb4)
View(comb_supptb4)
check <- UTSW_data[,c("MV_ICUD0toD3","Days_MV_ICUD0toD3")]
View(check)
UTSW_data$STUDY_PATIENT_ID
check <- UTSW_data[,c("STUDY_PATIENT_ID","MV_ICUD0toD3","Days_MV_ICUD0toD3")]
View(check)
library(lubridate)
source("/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R")
#data dir
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#5.ORGANSUPP_VENT
raw_ORGANSUPP_VENT_df <- read.csv(paste0(outdir,"xilong_extracted/Final dataset for Lucas part 3 08122021.csv"),stringsAsFactors = F)
colnames(raw_ORGANSUPP_VENT_df)[1:3] <- c("STUDY_PATIENT_ID","VENT_START_DATE","VENT_STOP_DATE")
#recode empty MV to NA
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[,1:3]
raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)] <- NA
#remove MV NA rows
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[complete.cases(raw_ORGANSUPP_VENT_df[,c("VENT_START_DATE","VENT_STOP_DATE")]),]
#reformat dates to "2014-12-06 00:00:00"
raw_ORGANSUPP_VENT_df$VENT_START_DATE <- paste(mdy(raw_ORGANSUPP_VENT_df$VENT_START_DATE),"00:00:00")
raw_ORGANSUPP_VENT_df$VENT_STOP_DATE  <- paste(mdy(raw_ORGANSUPP_VENT_df$VENT_STOP_DATE),"00:00:00")
View(raw_ORGANSUPP_VENT_df)
View(All_time_df)
library(lubridate)
source("/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UTSW/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
##########################################################################################
#Load Raw Data
##########################################################################################
#1.Load ADMISSION_INDX
raw_ADMISSION_INDX_df <- read.csv(paste0(raw_dir,"tIndexedIcuAdmission.csv"),stringsAsFactors = F)
#2.Change column name
col_to_change_indxes <- which(colnames(raw_ADMISSION_INDX_df) %in% c("PATIENT_NUM","HSP_ADMSN_TIME","HSP_DISCH_TIME","ICU_ADMSN_TIME","ICU_DISCH_TIME"))
colnames(raw_ADMISSION_INDX_df)[col_to_change_indxes] <- c("STUDY_PATIENT_ID","HOSP_ADMIT_DATE","HOSP_DISCHARGE_DATE","ICU_ADMIT_DATE","ICU_DISCHARGE_DATE")
View(raw_ADMISSION_INDX_df)
#For UK
UK_tb4 <- compute_stats_func(UK_data,"UK",var_list)
#For UTSW
UTSW_tb4 <- compute_stats_func(UTSW_data,"UTSW",var_list)
comb_supptb4 <- cbind(UK_tb4,UTSW_tb4)
View(raw_ADMISSION_INDX_df)
which(check$MV_ICUD0toD3==1 & check$Days_MV_ICUD0toD3==0)
#II.Xilong's Feature (Load not imputed data)
Xilong_df1 <-read.csv(paste0(data_dir,"xilong_extracted/Final dataset for Lucas part 1 07272021.csv"),stringsAsFactors = F)
#data dir
data_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
#II.Xilong's Feature (Load not imputed data)
Xilong_df1 <-read.csv(paste0(data_dir,"xilong_extracted/Final dataset for Lucas part 1 07272021.csv"),stringsAsFactors = F)
Xilong_df1$MV
View(Xilong_df1)
library(lubridate)
source("/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R")
#data dir
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/utsw/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#5.ORGANSUPP_VENT
raw_ORGANSUPP_VENT_df <- read.csv(paste0(outdir,"xilong_extracted/Final dataset for Lucas part 3 08122021.csv"),stringsAsFactors = F)
colnames(raw_ORGANSUPP_VENT_df)[1:3] <- c("STUDY_PATIENT_ID","VENT_START_DATE","VENT_STOP_DATE")
#recode empty MV to NA
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[,1:3]
raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df=="",arr.ind = T)] <- NA
#remove MV NA rows
raw_ORGANSUPP_VENT_df <- raw_ORGANSUPP_VENT_df[complete.cases(raw_ORGANSUPP_VENT_df[,c("VENT_START_DATE","VENT_STOP_DATE")]),]
#reformat dates to "2014-12-06 00:00:00"
raw_ORGANSUPP_VENT_df$VENT_START_DATE <- paste(mdy(raw_ORGANSUPP_VENT_df$VENT_START_DATE),"00:00:00")
raw_ORGANSUPP_VENT_df$VENT_STOP_DATE  <- paste(mdy(raw_ORGANSUPP_VENT_df$VENT_STOP_DATE),"00:00:00")
#treat Start = END as NA
which(raw_ORGANSUPP_VENT_df$VENT_START_DATE == raw_ORGANSUPP_VENT_df$VENT_STOP_DATE)
#treat Start = END as NA
check <- raw_ORGANSUPP_VENT_df[which(raw_ORGANSUPP_VENT_df$VENT_START_DATE == raw_ORGANSUPP_VENT_df$VENT_STOP_DATE),]
View(check)
