#20. SURGERY_INDX
raw_SURGERY_INDX_df <- read.csv(paste0(raw_dir,"SURGERY_INDX.csv"),stringsAsFactors = F)
View(raw_SURGERY_INDX_df)
i <- 1
i <- 1
curr_id <- analysis_ID[i]
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#3. Load raw DIAGNOSIS data
raw_DIAGNOSIS_df <- read.csv(paste0(raw_dir,"DIAGNOSIS.csv"),stringsAsFactors = F)
#4. Get sepsis df
sepsis_df <- raw_DIAGNOSIS_df[which(grepl("sepsis",raw_DIAGNOSIS_df[,"DIAGNOSIS_DESC"],ignore.case = T) ==T),]
#Steps: 1. Get raw available values
##########################################################################################
#1. Get raw available values
septic_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID),ncol = 2 ))
colnames(septic_df) <- c("STUDY_PATIENT_ID","Sepsis_Before_or_At_Admission")
i <- 1
curr_id <- analysis_ID[i]
#Steps: 1. Get raw available values
##########################################################################################
#1. Get raw available values
Final_sepsis_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID),ncol = 2 ))
colnames(Final_sepsis_df) <- c("STUDY_PATIENT_ID","Sepsis_Before_or_At_Admission")
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#3. Load raw DIAGNOSIS data
raw_DIAGNOSIS_df <- read.csv(paste0(raw_dir,"DIAGNOSIS.csv"),stringsAsFactors = F)
#4. Get sepsis df
sepsis_df <- raw_DIAGNOSIS_df[which(grepl("sepsis",raw_DIAGNOSIS_df[,"DIAGNOSIS_DESC"],ignore.case = T) ==T),]
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#3. Load raw DIAGNOSIS data
raw_DIAGNOSIS_df <- read.csv(paste0(raw_dir,"DIAGNOSIS.csv"),stringsAsFactors = F)
#4. Get sepsis df
sepsis_df <- raw_DIAGNOSIS_df[which(grepl("sepsis",raw_DIAGNOSIS_df[,"DIAGNOSIS_DESC"],ignore.case = T) ==T),]
unique(raw_DIAGNOSIS_df$DIAGNOSIS_TYPE)
which(sepsis_df$DIAGNOSIS_TYPE %in% c("06.Working Dx","01.Visit Reason","Admit Dx","..Working Dx"))
sepsis_df <- sepsis_df[which(sepsis_df$DIAGNOSIS_TYPE %in% c("06.Working Dx","01.Visit Reason","Admit Dx","..Working Dx")),]
#4. Get sepsis df
sepsis_df <- raw_DIAGNOSIS_df[which(grepl("sepsis",raw_DIAGNOSIS_df[,"DIAGNOSIS_DESC"],ignore.case = T) ==T),]
table(sepsis_df$DIAGNOSIS_TYPE)
sepsis_df <- sepsis_df[which(sepsis_df$DIAGNOSIS_TYPE %in% c("06.Working Dx","01.Visit Reason","Admit Dx","..Working Dx")),]
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#3. Load raw DIAGNOSIS data
raw_DIAGNOSIS_df <- read.csv(paste0(raw_dir,"DIAGNOSIS.csv"),stringsAsFactors = F)
#4. Get sepsis df
sepsis_df <- raw_DIAGNOSIS_df[which(grepl("sepsis",raw_DIAGNOSIS_df[,"DIAGNOSIS_DESC"],ignore.case = T) ==T),]
sepsis_BeforeAtAdmin_df <- sepsis_df[which(sepsis_df$DIAGNOSIS_TYPE %in% c("06.Working Dx","01.Visit Reason","Admit Dx","..Working Dx")),]
#Steps: 1. Get raw available values
##########################################################################################
#1. Get raw available values
Final_sepsis_df <- as.data.frame(matrix(NA, nrow = length(analysis_ID),ncol = 2 ))
colnames(Final_sepsis_df) <- c("STUDY_PATIENT_ID","Sepsis_Before_or_At_Admission")
i <- 1
curr_id <- analysis_ID[i]
curr_sepsis_df <- sepsis_BeforeAtAdmin_df[which(sepsis_BeforeAtAdmin_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_sepsis_df
sepsis_beforeat_IDs <- unique(sepsis_BeforeAtAdmin_df$STUDY_PATIENT_ID)
length(sepsis_beforeat_IDs)
curr_id %in% sepsis_beforeat_IDs
Final_sepsis_df[i,"STUDY_PATIENT_ID"] <- curr_id
source('~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/1T_Get_DIAGNOSIS_Related.R', echo=TRUE)
View(Final_sepsis_df)
table(Final_sepsis_df$Sepsis_Before_or_At_Admission)
write.csv(Final_sepsis_df,paste0(outdir,"All_sepsis_Before_Or_At_Admission.csv"),row.names = F)
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#3.MEDICATIONS_INDX
raw_MEDICATIONS_df <- read.csv(paste0(raw_dir,"MEDICATIONS_INDX.csv"),stringsAsFactors = F)
View(raw_MEDICATIONS_df)
raw_MEDICATIONS_df[,"MEDICATION_NAME"]
#Nephrotoxin df
which(raw_MEDICATIONS_df[,"MEDICATION_NAME"] %in% c("ACE INHIBITORS","ANGIOTENSIN RECEPTOR BLOCKERS","Aminoglycosides","NSAIDs"))
#Nephrotoxin df
which(raw_MEDICATIONS_df[,"MEDICATION_TYPE"] %in% c("ACE INHIBITORS","ANGIOTENSIN RECEPTOR BLOCKERS","Aminoglycosides","NSAIDs"))
which(grepl("ACE",raw_MEDICATIONS_df[,"MEDICATION_TYPE"])==T)
raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("ACE",raw_MEDICATIONS_df[,"MEDICATION_TYPE"])==T)]
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("ACE",raw_MEDICATIONS_df[,"MEDICATION_TYPE"])==T)])
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("angiotensin",raw_MEDICATIONS_df[,"MEDICATION_TYPE"])==T)])
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("angiotensi",raw_MEDICATIONS_df[,"MEDICATION_TYPE"])==T)])
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("ang",raw_MEDICATIONS_df[,"MEDICATION_TYPE"])==T)])
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("angiotensi",raw_MEDICATIONS_df[,"MEDICATION_TYPE"],ignore.case = T)==T)])
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("converting ",raw_MEDICATIONS_df[,"MEDICATION_TYPE"],ignore.case = T)==T)])
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("converting",raw_MEDICATIONS_df[,"MEDICATION_TYPE"],ignore.case = T)==T)])
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("enzyme ",raw_MEDICATIONS_df[,"MEDICATION_TYPE"],ignore.case = T)==T)])
unique(raw_MEDICATIONS_df[,"MEDICATION_TYPE"][which(grepl("enzyme",raw_MEDICATIONS_df[,"MEDICATION_TYPE"],ignore.case = T)==T)])
#Nephrotoxin df
Nephrotoxin_indxes <- which(raw_MEDICATIONS_df[,"MEDICATION_TYPE"] %in% c("ACE INHIBITORS","ANGIOTENSIN RECEPTOR BLOCKERS","Aminoglycosides","NSAIDs"))
Nephrotoxin_df  <- raw_MEDICATIONS_df[Nephrotoxin_indxes,]
#Vasopressor  df
Vasopressor_indxes <- which(raw_MEDICATIONS_df[,"MEDICATION_TYPE"] %in% c("dopamine",
"dobutamine",
"milrinone",
"epinephrine",
"norepinephrine",
"phenylephrine",
"vasopressin"))
Vasopressor_df  <- raw_MEDICATIONS_df[Vasopressor_indxes,]
#Vasopressor  df
medication_names <- c("dopamine","dobutamine","milrinone","epinephrine","norepinephrine","phenylephrine","vasopressin")
search_string <- paste0(medication_names,collapse = "|")
search_string
Vasopressor_indxes <- which(grepl(search_string,raw_MEDICATIONS_df[,"MEDICATION_NAME"])==T)
Vasopressor_df  <- raw_MEDICATIONS_df[Vasopressor_indxes,]
View(Vasopressor_df)
table(Vasopressor_df$MEDICATION_NAME)
Vasopressor_indxes <- which(grepl(search_string,raw_MEDICATIONS_df[,"MEDICATION_NAME"],ignore.case = T)==T)
Vasopressor_df  <- raw_MEDICATIONS_df[Vasopressor_indxes,]
table(Vasopressor_df$MEDICATION_NAME)
unqiue(Vasopressor_df$MEDICATION_NAME)
unique(Vasopressor_df$MEDICATION_NAME)
i <- 1
curr_id <- analysis_ID[i]
Exposure_df[i,"STUDY_PATIENT_ID"] <- curr_id
##########################################################################################
#1. Get raw available values
Exposure_df<- as.data.frame(matrix(NA, nrow = length(analysis_ID),ncol = 3))
colnames(Exposure_df) <- c("STUDY_PATIENT_ID","Nephrotoxin_ICUD0toD3","Vasopressor_ICU_D0toD3")
i <- 1
curr_id <- analysis_ID[i]
Exposure_df[i,"STUDY_PATIENT_ID"] <- curr_id
Exposure_df[i,"STUDY_PATIENT_ID"] <- curr_id
curr_Nephrotoxin_df <- Nephrotoxin_df[which(Nephrotoxin_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_Nephrotoxin_df
#Time info
curr_time_df <- All_time_df[which(All_time_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_time_df
curr_icu_start <- ymd_hms(curr_time_df[,"Updated_ICU_ADMIT_DATE"])
#Get actual days/times in ICU D0-D3
#it could be ICU end time (e.g, if ICU stays < 3 days) or the end of ICU D3
curr_actual_ICU_time_idxes <- which(colnames(curr_time_df) %in% c("Actual_D0_End","Actual_D1_End","Actual_D2_End","Actual_D3_End"))
curr_actual_ICU_time <- curr_time_df[,curr_actual_ICU_time_idxes]
curr_actual_ICU_time
curr_last_ICU_time <- max(ymd_hms(curr_actual_ICU_time),na.rm = T)
curr_last_ICU_time
curr_Nephrotoxin_df
curr_Vasopressor_df
curr_Nephrotoxin_df <- Nephrotoxin_df[which(Nephrotoxin_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_Vasopressor_df <- Vasopressor[which(Vasopressor[,"STUDY_PATIENT_ID"] == curr_id),]
curr_Vasopressor_df
curr_Nephrotoxin_df <- Nephrotoxin_df[which(Nephrotoxin_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_Vasopressor_df <- Vasopressor[which(Vasopressor[,"STUDY_PATIENT_ID"] == curr_id),]
curr_Vasopressor_df <- Vasopressor_df[which(Vasopressor[,"STUDY_PATIENT_ID"] == curr_id),]
curr_Vasopressor_df <- Vasopressor_df[which(Vasopressor_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_Vasopressor_df
unique(Vasopressor_df$STUDY_PATIENT_ID)
length(unique(Vasopressor_df$STUDY_PATIENT_ID))
time_start <- curr_icu_start
time_start <- curr_icu_start
time_end <- curr_last_ICU_time
medication_df <- Nephrotoxin_df
pt_id <- curr_id
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_df
time_start <- curr_icu_start
time_end <- curr_last_ICU_time
medication_df <- Vasopressor_df
pt_id <- curr_id
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_df
m < -1
m <- 1
curr_df[m,]
curr_df[m,"ORDER_ENTERED_DATE"]
curr_order_time <- mdy(curr_df[m,"ORDER_ENTERED_DATE"])
curr_order_time
medication_df$ORDER_ENTERED_DATE
curr_icu_start
curr_last_ICU_time
curr_order_time
get_exposure_toMedication_inTimeWindow <- function(time_start,time_end,medication_df,pt_id){
# time_start <- curr_icu_start
# time_end <- curr_last_ICU_time
# medication_df <- Vasopressor_df
# pt_id <- curr_id
#
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == pt_id),]
if (nrow(curr_df) == 0){
final_exposure_flag <- 0
}else{
each_exposure_flag <- NA
for (m in 1:nrow(curr_df)){ #check for each medication
curr_order_time <- mdy(curr_df[m,"ORDER_ENTERED_DATE"])
if (curr_order_time >= curr_icu_start & curr_order_time <= curr_last_ICU_time){
each_exposure_flag[i] <- 1
}else{
each_exposure_flag[i] <- 0
}
}
final_exposure_flag <- max(each_exposure_flag) #if used any one, (e.g,0,0,1) the max is one, expose at least one medication
}
return(final_exposure_flag)
}
get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Nephrotoxin_df,curr_id)
get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Vasopressor_df,curr_id)
source('~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/1U_Get_Medication_Related.R', echo=TRUE)
i
curr_time_df
curr_icu_start
curr_last_ICU_time
Exposure_df[i,"Nephrotoxin_ICUD0toD3"] <- get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Nephrotoxin_df,curr_id)
Exposure_df[i,"Vasopressor_ICU_D0toD3"] <-get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Vasopressor_df,curr_id)
which(Nephrotoxin_df$STUDY_PATIENT_ID == curr_id)
Nephrotoxin_df[which(Nephrotoxin_df$STUDY_PATIENT_ID == curr_id),]
View(Nephrotoxin_df)
unique(Nephrotoxin_df$ORDER_ENTERED_DATE)
check <- as.data.frame(unique(Nephrotoxin_df$ORDER_ENTERED_DATE))
View(check)
which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) > 10)
Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) > 10),]
check_df <- Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) > 10),]
View(check_df)
table(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE))
check_df <- Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) == 9),]
View(check_df)
nchar(1/10/2009)
nchar("(1/10/2009"))
nchar("1/10/2009")
check_df <- Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) == 8),]
check_df <- Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) == 10),]
check_df <- Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) == 20),]
check_df <- Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) == 22),]
check_df <- Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) == 30),]
View(All_time_df)
#remove the date has nchar > 10 (e.g 4/9/201- times a day), cannot tell which date it is
remove_idxes <- which(nchar(raw_MEDICATIONS_df[,"ORDER_ENTERED_DATE"])>10)
raw_MEDICATIONS_df <- raw_MEDICATIONS_df[-remove_idxes,]
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#3.MEDICATIONS_INDX
raw_MEDICATIONS_df <- read.csv(paste0(raw_dir,"MEDICATIONS_INDX.csv"),stringsAsFactors = F)
#remove the date has nchar > 10 (e.g 4/9/201- times a day), cannot tell which date it is
remove_idxes <- which(nchar(raw_MEDICATIONS_df[,"ORDER_ENTERED_DATE"])>10)
raw_MEDICATIONS_df <- raw_MEDICATIONS_df[-remove_idxes,]
#3.MEDICATIONS_INDX
raw_MEDICATIONS_df <- read.csv(paste0(raw_dir,"MEDICATIONS_INDX.csv"),stringsAsFactors = F)
#remove the date has nchar > 10 (e.g 4/9/201- times a day), cannot tell which date it is
remove_idxes <- which(nchar(raw_MEDICATIONS_df[,"ORDER_ENTERED_DATE"])>10)
raw_MEDICATIONS_df <- raw_MEDICATIONS_df[-remove_idxes,]
#Nephrotoxin_df
Nephrotoxin_indxes <- which(raw_MEDICATIONS_df[,"MEDICATION_TYPE"] %in% c("ACE INHIBITORS","ANGIOTENSIN RECEPTOR BLOCKERS","Aminoglycosides","NSAIDs"))
Nephrotoxin_df  <- raw_MEDICATIONS_df[Nephrotoxin_indxes,]
check_df <- Nephrotoxin_df[which(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE) == 30),]
table(nchar(Nephrotoxin_df$ORDER_ENTERED_DATE))
source('~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/1U_Get_Medication_Related.R', echo=TRUE)
#Compute missing
feature_columns <- c("Nephrotoxin_ICUD0toD3","Vasopressor_ICU_D0toD3")
missing_table <- get_missing_rate_table(Exposure_df,feature_columns)
missing_table
table(Exposure_df$Nephrotoxin_ICUD0toD3)
table(Exposure_df$Vasopressor_ICU_D0toD3)
View(Exposure_df)
##########################################################################################
#1. Get raw available values
Exposure_df<- as.data.frame(matrix(NA, nrow = length(analysis_ID),ncol = 3))
colnames(Exposure_df) <- c("STUDY_PATIENT_ID","Nephrotoxin_ICUD0toD3","Vasopressor_ICUD0toD3")
i <- 2
if (i %% 1000 == 0){print(i)}
curr_id <- analysis_ID[i]
Exposure_df[i,"STUDY_PATIENT_ID"] <- curr_id
#Time info
curr_time_df <- All_time_df[which(All_time_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_icu_start <- ymd_hms(curr_time_df[,"Updated_ICU_ADMIT_DATE"])
#Get actual days/times in ICU D0-D3
#it could be ICU end time (e.g, if ICU stays < 3 days) or the end of ICU D3
curr_actual_ICU_time_idxes <- which(colnames(curr_time_df) %in% c("Actual_D0_End","Actual_D1_End","Actual_D2_End","Actual_D3_End"))
curr_actual_ICU_time <- curr_time_df[,curr_actual_ICU_time_idxes]
curr_last_ICU_time <- max(ymd_hms(curr_actual_ICU_time),na.rm = T)
Exposure_df[i,"Nephrotoxin_ICUD0toD3"] <- get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Nephrotoxin_df,curr_id)
get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Nephrotoxin_df,curr_id)
time_start <- curr_icu_start
time_end <- curr_last_ICU_time
medication_df <- Vasopressor_df
pt_id <- curr_id
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == pt_id),]
curr_df
time_start <- curr_icu_start
time_end <- curr_last_ICU_time
medication_df <- Vasopressor_df
pt_id <- curr_id
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == pt_id),]
if (nrow(curr_df) == 0){
final_exposure_flag <- 0
}else{
each_exposure_flag <- NA
for (m in 1:nrow(curr_df)){ #check for each medication
curr_order_time <- mdy(curr_df[m,"ORDER_ENTERED_DATE"])
if (curr_order_time >= curr_icu_start & curr_order_time <= curr_last_ICU_time){
each_exposure_flag[i] <- 1
}else{
each_exposure_flag[i] <- 0
}
}
final_exposure_flag <- max(each_exposure_flag) #if used any one, (e.g,0,0,1) the max is one, expose at least one medication
}
final_exposure_flag
medication_df <- Nephrotoxin_df
pt_id <- curr_id
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == pt_id),]
curr_df
curr_icu_start
curr_last_ICU_time
each_exposure_flag <- NA
for (m in 1:nrow(curr_df)){ #check for each medication
curr_order_time <- mdy(curr_df[m,"ORDER_ENTERED_DATE"])
if (curr_order_time >= curr_icu_start & curr_order_time <= curr_last_ICU_time){
each_exposure_flag[i] <- 1
}else{
each_exposure_flag[i] <- 0
}
}
each_exposure_flag
curr_df
time_start <- curr_icu_start
time_end <- curr_last_ICU_time
medication_df <- Nephrotoxin_df
pt_id <- curr_id
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == pt_id),]
each_exposure_flag <- NA
for (m in 1:nrow(curr_df)){ #check for each medication
curr_order_time <- mdy(curr_df[m,"ORDER_ENTERED_DATE"])
if (curr_order_time >= curr_icu_start & curr_order_time <= curr_last_ICU_time){
each_exposure_flag[i] <- 1
}else{
each_exposure_flag[i] <- 0
}
}
each_exposure_flag
time_start <- curr_icu_start
time_end <- curr_last_ICU_time
medication_df <- Nephrotoxin_df
pt_id <- curr_id
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == pt_id),]
if (nrow(curr_df) == 0){
final_exposure_flag <- 0
}else{
each_exposure_flag <- NA
for (m in 1:nrow(curr_df)){ #check for each medication
curr_order_time <- mdy(curr_df[m,"ORDER_ENTERED_DATE"])
if (curr_order_time >= curr_icu_start & curr_order_time <= curr_last_ICU_time){
each_exposure_flag[m] <- 1
}else{
each_exposure_flag[m] <- 0
}
}
final_exposure_flag <- max(each_exposure_flag) #if used any one, (e.g,0,0,1) the max is one, expose at least one medication
}
final_exposure_flag
Exposure_df[i,"Nephrotoxin_ICUD0toD3"] <- get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Nephrotoxin_df,curr_id)
Exposure_df[i,"Vasopressor_ICUD0toD3"] <-get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Vasopressor_df,curr_id)
Exposure_df[i,"Nephrotoxin_ICUD0toD3"]
#check if pt on medciation in time window
get_exposure_toMedication_inTimeWindow <- function(time_start,time_end,medication_df,pt_id){
# time_start <- curr_icu_start
# time_end <- curr_last_ICU_time
# medication_df <- Nephrotoxin_df
# pt_id <- curr_id
curr_df <- medication_df[which(medication_df[,"STUDY_PATIENT_ID"] == pt_id),]
if (nrow(curr_df) == 0){
final_exposure_flag <- 0
}else{
each_exposure_flag <- NA
for (m in 1:nrow(curr_df)){ #check for each medication
curr_order_time <- mdy(curr_df[m,"ORDER_ENTERED_DATE"])
if (curr_order_time >= curr_icu_start & curr_order_time <= curr_last_ICU_time){
each_exposure_flag[m] <- 1
}else{
each_exposure_flag[m] <- 0
}
}
final_exposure_flag <- max(each_exposure_flag) #if used any one, (e.g,0,0,1) the max is one, expose at least one medication
}
return(final_exposure_flag)
}
Exposure_df[i,"Nephrotoxin_ICUD0toD3"] <- get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Nephrotoxin_df,curr_id)
Exposure_df[i,"Nephrotoxin_ICUD0toD3"]
library(lubridate)
source("TAKI_Ultility.R")
#Raw data dir
raw_dir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/Taylors_Data/UKY/raw_csv_files/"
outdir <- "/Volumes/LJL_ExtPro/Data/AKI_Data/TAKI_Data_Extracted/uky/"
##########################################################################################
#1. Load data
##########################################################################################
#1. Analysis Id after exclusion
analysis_ID_df <-read.csv(paste0(outdir,"Final_Analysis_ID.csv"),stringsAsFactors = F)
analysis_ID <- unique(analysis_ID_df[,"STUDY_PATIENT_ID"]) #7354
#2. Corrected Time df
All_time_df <-read.csv(paste0(outdir,"All_Corrected_Timeinfo.csv"),stringsAsFactors = F)
All_time_df <- All_time_df[which(All_time_df$STUDY_PATIENT_ID %in% analysis_ID),] #filter for anlaysis Id only
#3.MEDICATIONS_INDX
raw_MEDICATIONS_df <- read.csv(paste0(raw_dir,"MEDICATIONS_INDX.csv"),stringsAsFactors = F)
#remove the date has nchar > 10 (e.g 4/9/201- times a day), cannot tell which date it is
remove_idxes <- which(nchar(raw_MEDICATIONS_df[,"ORDER_ENTERED_DATE"])>10)
raw_MEDICATIONS_df <- raw_MEDICATIONS_df[-remove_idxes,]
#Nephrotoxin_df
Nephrotoxin_indxes <- which(raw_MEDICATIONS_df[,"MEDICATION_TYPE"] %in% c("ACE INHIBITORS","ANGIOTENSIN RECEPTOR BLOCKERS","Aminoglycosides","NSAIDs"))
Nephrotoxin_df  <- raw_MEDICATIONS_df[Nephrotoxin_indxes,]
#Vasopressor_df
medication_names <- c("dopamine","dobutamine","milrinone","epinephrine","norepinephrine","phenylephrine","vasopressin")
search_string <- paste0(medication_names,collapse = "|")
Vasopressor_indxes <- which(grepl(search_string,raw_MEDICATIONS_df[,"MEDICATION_NAME"],ignore.case = T)==T)
Vasopressor_df  <- raw_MEDICATIONS_df[Vasopressor_indxes,]
##########################################################################################
#Features to extract : 1. Nephrotoxin exposure in ICU D0-D3
#                      2. Vasopressor exposure in ICU D0-D3
##########################################################################################
#1. Get raw available values
Exposure_df<- as.data.frame(matrix(NA, nrow = length(analysis_ID),ncol = 3))
colnames(Exposure_df) <- c("STUDY_PATIENT_ID","Nephrotoxin_ICUD0toD3","Vasopressor_ICUD0toD3")
for (i in 1:length(analysis_ID)){
if (i %% 1000 == 0){print(i)}
curr_id <- analysis_ID[i]
Exposure_df[i,"STUDY_PATIENT_ID"] <- curr_id
#Time info
curr_time_df <- All_time_df[which(All_time_df[,"STUDY_PATIENT_ID"] == curr_id),]
curr_icu_start <- ymd_hms(curr_time_df[,"Updated_ICU_ADMIT_DATE"])
#Get actual days/times in ICU D0-D3
#it could be ICU end time (e.g, if ICU stays < 3 days) or the end of ICU D3
curr_actual_ICU_time_idxes <- which(colnames(curr_time_df) %in% c("Actual_D0_End","Actual_D1_End","Actual_D2_End","Actual_D3_End"))
curr_actual_ICU_time <- curr_time_df[,curr_actual_ICU_time_idxes]
curr_last_ICU_time <- max(ymd_hms(curr_actual_ICU_time),na.rm = T)
Exposure_df[i,"Nephrotoxin_ICUD0toD3"] <- get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Nephrotoxin_df,curr_id)
Exposure_df[i,"Vasopressor_ICUD0toD3"] <-get_exposure_toMedication_inTimeWindow(curr_icu_start,curr_last_ICU_time,Vasopressor_df,curr_id)
}
table(Exposure_df$Nephrotoxin_ICUD0toD3)
table(Exposure_df$Vasopressor_ICU_D0toD3)
table(Exposure_df$Nephrotoxin_ICUD0toD3)
table(Exposure_df$Vasopressor_ICUD0toD3)
table(Exposure_df$Nephrotoxin_ICUD0toD3)
table(Exposure_df$Vasopressor_ICUD0toD3)
#Compute missing
feature_columns <- c("Nephrotoxin_ICUD0toD3","Vasopressor_ICUD0toD3")
missing_table <- get_missing_rate_table(Exposure_df,feature_columns)
missing_table
write.csv(Exposure_df,paste0(outdir,"All_Nephrotoxin_Vasopressor.csv"),row.names = F)
raw_MEDICATIONS_df$ORDER_ENTERED_DATE
write.csv(Exposure_df,paste0(outdir,"All_Nephrotoxin_Vasopressor.csv"),row.names = F)
