comb_df_withLabel <- comb_df_withLabel[!duplicated(comb_df_withLabel[,-ncol(comb_df_withLabel)]),]
input_df <- comb_df_withLabel[,-ncol(comb_df_withLabel)]
#Run PCA
res.pca <- PCA(input_df, graph = FALSE)
eig.val <- get_eigenvalue(res.pca)
#######################################################################################################
#6. histogram Plot
#######################################################################################################
colnames(comb_df_withLabel)[which(colnames(comb_df_withLabel)=="sample_death_in24h")] <- "Death in Next 24h"
outcome_col <- "Death in Next 24h"
top_fs
outcome_col <- "sample_death_in24h"
feature_col1 <- "MIN_Scr"
feature_col2 <- "AVG_Bicarbonate"
feature_col3 <- "WeightedSumScore_Dim1Top7Fs"
comb_df_withLabel[,outcome_col] <- as.factor(comb_df_withLabel[,outcome_col])
top_fs <- c(feature_col1,feature_col2,feature_col3)
library(Rtsne)
library("FactoMineR")
library("factoextra")
norm_minmax <- function(x){
(x- min(x,na.rm = T)) /(max(x,na.rm = T)-min(x,na.rm = T))
}
################################################################################
#Data dir
################################################################################
proj_dir  <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/AKID_Project2/Intermediate_Data/practice_data_092721/onRRT_analysis/sample_level_data/"
#data dir
data_dir1  <- paste0(proj_dir, "AVG_MAX_MIN_Feature/")
data_dir2  <- paste0(proj_dir, "static_features/")
outdir <- paste0(proj_dir,"/Z_PCA_data/")
########################################################################################################
#Load labels
########################################################################################################
label_df <- read.csv(paste0(proj_dir,"FinalIDs_spOutcome.csv"),stringsAsFactors = F)
########################################################################################################
#1. Load all stationary feature data
########################################################################################################
avg_max_min_df <- read.csv(paste0(data_dir1,"All_AVGMAXMIN_onRRT_Imputed.csv"),stringsAsFactors = F)
static_df      <- read.csv(paste0(data_dir2,"samples_static_features_onRRT.csv"),stringsAsFactors = F)
#Inpute static with median
for (j in 3:ncol(static_df)){
curr_col <- static_df[,j]
na_indxes <- which(is.na(curr_col)==T)
if (length(na_indxes) > 0){
static_df[na_indxes,j] <- median(static_df[,j],na.rm = T)
}
}
#MAtch ID order
match_order <- match(avg_max_min_df[,"SAMPLE_ID"],static_df[,"SAMPLE_ID"])
comb_df <- cbind(static_df[match_order,-1],avg_max_min_df[,-1])
rownames(comb_df) <- comb_df$SAMPLE_ID
comb_df <- comb_df[,-1]
match_order2 <- match(label_df[,"SAMPLE_ID"],rownames(comb_df))
comb_df_withLabel <- cbind(comb_df,label_df[,c("sample_death_in24h")])
colnames(comb_df_withLabel)[ncol(comb_df_withLabel)] <- "sample_death_in24h"
#########################################################
#Input df, remove duplicated rows
#########################################################
#remove duplicated rows for tSNE and PCA
comb_df_withLabel <- comb_df_withLabel[!duplicated(comb_df_withLabel[,-ncol(comb_df_withLabel)]),]
input_df <- comb_df_withLabel[,-ncol(comb_df_withLabel)]
#Run PCA
res.pca <- PCA(input_df, graph = FALSE)
eig.val <- get_eigenvalue(res.pca)
#write.csv(eig.val,paste0(outdir,"PCA_Eigenvalues.csv"))
#Perc of explained Variation
p <- fviz_eig(res.pca, ncp = 10, addlabels = TRUE, ylim = c(0, max(eig.val[,2] + eig.val[,2]/5)))
p <- p +  ggtitle("PCA Explained Variation")
png(paste0(outdir,"PCA_Explained_Var.png"),res = 150,width = 1800,height = 1200)
print(p)
dev.off()
#Get varaible contribution
var <- get_pca_var(res.pca)
var_contribution <- as.data.frame(var$contrib)
write.csv(var_contribution,paste0(outdir,"PCA_Variable_Contribution.csv"))
#plot
p <- fviz_pca_ind(res.pca,
geom.ind = "point", # show points only (nbut not "text")
col.ind = as.factor(comb_df_withLabel$sample_death_in24h), # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
legend.title = "Groups")
png(paste0(outdir,"PCA_2DPlot.png"),res = 150,width = 1800,height = 1200)
print(p)
dev.off()
####################################################################################################
# Run tsne
####################################################################################################
# set.seed(42)
# tsne_out <- Rtsne(input_df,pca=TRUE,perplexity=30) # Run TSNE
#
# tsne_out_df <- data.frame(Y = tsne_out$Y,
#                           Class_label = comb_df_withLabel$sample_death_in24h,
#                           ID = rownames(input_df))
#
# p <- ggplot(tsne_out_df, aes(x=Y.1, y=Y.2,color = Class_label)) +
#   geom_point(size = 5) +
#   theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
#                      panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
#   theme(legend.position="none",legend.title = element_blank(),legend.text=element_text(size=20)) +
#   theme(axis.text = element_text(size = 20),axis.title=element_text(size=20,face="bold")) +
#   guides(color = guide_legend(nrow = 3, byrow = TRUE)) +
#   scale_x_continuous(name ="Tsne Dim1",limits = c(min(tsne_out_df$Y.1),max(tsne_out_df$Y.1))) +
#   scale_y_continuous(name ="Tsne Dim2",limits = c(min(tsne_out_df$Y.2),max(tsne_out_df$Y.2)))
#
# png(paste0(outdir,"tSNE_2DPlot.png"),res = 150,width = 1800,height = 1200)
# print(p)
# dev.off()
####################################################################################################
#Add weighted sum scores for each sample, based on the contribution of top 7 features on Dim 1
####################################################################################################
top7_features_contribution_df  <- var_contribution[order(var_contribution[,"Dim.1"],decreasing = T)[1:7],]
top7_features                  <- rownames(top7_features_contribution_df)
top7_features_contributions    <- top7_features_contribution_df[,"Dim.1"]
#Normalized feature values for each sample
normed_data <- as.data.frame(lapply(comb_df_withLabel[,top7_features], norm_minmax))
colnames(normed_data) <- paste0("Normed_",colnames(normed_data))
comb_df_withLabel[,colnames(normed_data)] <- normed_data
#Compute weightes sum
comb_df_withLabel[,"WeightedSumScore_Dim1Top7Fs"] <- NA
for (i in 1:nrow(comb_df_withLabel)){
if (i %% 1000 == 0){print(i)}
curr_pt_vals <- comb_df_withLabel[i,paste0("Normed_",top7_features)]
curr_wss     <- sum(curr_pt_vals*top7_features_contributions) #weighted sum
comb_df_withLabel[i,"WeightedSumScore_Dim1Top7Fs"] <- curr_wss
}
wss_df <- comb_df_withLabel[, c(top7_features,
paste0("Normed_",top7_features),
"WeightedSumScore_Dim1Top7Fs",
"sample_death_in24h")]
#write.csv(wss_df,paste0(outdir,"WSS_Scores.csv"))
####################################################################################################
#Boxplot most contributed feature
####################################################################################################
outcome_col <- "sample_death_in24h"
feature_col1 <- "MIN_Scr"
feature_col2 <- "AVG_Bicarbonate"
feature_col3 <- "WeightedSumScore_Dim1Top7Fs"
comb_df_withLabel[,outcome_col] <- as.factor(comb_df_withLabel[,outcome_col])
#######################################################################################################
#6. histogram Plot
#######################################################################################################
colnames(comb_df_withLabel)[which(colnames(comb_df_withLabel)=="sample_death_in24h")] <- "Death in Next 24h"
outcome_col <- "Death in Next 24h"
top_fs
feature_col <- top_fs[i]
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24H`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
geom_text(aes(x=20, label="Exclusion Threshold\n", y= 800), colour="darkred", angle=90)
p
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
geom_text(aes(x=20, label="Exclusion Threshold\n", y= 800), colour="darkred", angle=90)
p
top_fs
i<-3
feature_col <- top_fs[i]
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5)
p
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
geom_text(aes(x=20, label="Exclusion Threshold\n", y= 800), colour="darkred", angle=90)
p
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
annotate(geom = 'text', label = 'Exclusion', x = 20, y = 800, hjust = 0, vjust = 1)
png(paste0(outdir,"Histogram/",feature_col,".png"),res = 150,width = 800,height = 500)
print(p)
dev.off()
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
annotate(geom = 'text', label = 'Exclusion', x = 20, y = 800, hjust = 0, vjust = 2)
png(paste0(outdir,"Histogram/",feature_col,".png"),res = 150,width = 800,height = 500)
print(p)
dev.off()
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
annotate(geom = 'text', label = 'Exclusion', x = 20, y = 800, hjust = 1)
p
png(paste0(outdir,"Histogram/",feature_col,".png"),res = 150,width = 800,height = 500)
print(p)
dev.off()
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
annotate(geom = 'text', label = 'Exclusion', x = 20, y = 800, hjust = -1)
p
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
annotate(geom = 'text', label = 'Exclusion', x = 20, y = 800, hjust = -0.1)
p
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
annotate(geom = 'text', label = 'Exclusion', x = 20, y = 800, hjust = -0.1,color = "red")
p
p<-ggplot(comb_df_withLabel, aes_string(x=feature_col, color="`Death in Next 24h`")) +
geom_histogram(fill="white",bins = 50) +
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20,face="bold"))+
scale_color_manual(values=c("darkgreen", "darkred"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position="top")+
xlab("Weighted Sum of Top 7 Contributed Features") +
ylab("Count") +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) +
geom_vline(xintercept = 20, linetype="dashed",
color = "darkblue", size=1.5) +
annotate(geom = 'text', label = 'Exclusion', x = 20, y = 800, hjust = -0.1,color = "darkblue")
p
png(paste0(outdir,"Histogram/",feature_col,".png"),res = 150,width = 800,height = 500)
print(p)
dev.off()
library(ontologyIndex)
ghpo_dat<- get_ontology("/Users/lucasliu/Desktop/hp2.obo.txt",extract_tags = "everything")
library(ontologyIndex)
ghpo_dat<- get_ontology("/Users/lucasliu/Desktop/hp2.obo.txt",extract_tags = "everything")
ghpo_dat$children[1]
descendant_of_Pheno_abnorm <- get_descendants(ghpo_dat,"HP:0001919") #AKI
descendant_of_AKI<- get_descendants(ghpo_dat,"HP:0001919") #AKI
length(descendant_of_AKI) # 15560
descendant_of_AKI
get_descendants(ghpo_dat, "HP:0001919", exclude_roots = FALSE)
descendant_of_AKI<- get_descendants(ghpo_dat,"HP:0001873") #AKI
length(descendant_of_AKI) # 15560
descendant_of_AKI
descendant_of_AKI<- get_descendants(ghpo_dat,"HP:0001919") #AKI
descendant_of_AKI
get_ancestors(ghpo_dat, "HP:0001919", exclude_roots = FALSE)
get_ancestors(ghpo_dat, "HP:0001919")
r = 0.8 # correlation coefficient
sigma = matrix(c(1,r,r,1), ncol=2)
View(sigma)
s = chol(sigma)
View(s)
n = 10000
z = s%*%matrix(rnorm(n*2), nrow=2)
u = pnorm(z)
View(u)
age = qgamma(u[1,], 15, 0.5)
age_bracket = cut(age, breaks = seq(0,max(age), by=5))
success = u[2,]>0.4
round(prop.table(table(age_bracket, success)),2)
plot(density(age[!success]), main="Age by Success", xlab="age")
lines(density(age[success]), lty=2)
legend('topright', c("Failure", "Success"), lty=c(1,2))
library(ggplot2)
library(dplyr)
library(tidyr)
library(faux)
install.packages("faux")
library(faux)
dat <- rnorm_multi(varnames = "A") %>%
mutate(B = rnorm_pre(A, mu = 10, sd = 2, r = 0.5))
View(dat)
dat$C <- rnorm_pre(dat$A, mu = 10, sd = 2, r = 0.5, empirical = TRUE)
View(dat)
rnorm_multi
set.seed(123)
sample(c(0,1), replace=TRUE, size=n)
sample(c(0,1), replace=TRUE, size=100)
domain_labels <- sample(c(0,1),replace = TRUE, size= 100)
domain_labels <- sample(c(0,1),replace = TRUE, size= 100)
domain_labels
transf_a <- NA
rand(1)
runif(1)
runif(1,0,0.5)
transf_a <- NA
for (i in length(domain_labels)){
if (domain_labels[i] == 0){
transf_a[i] <- runif(1,0,0.5)
}else{
transf_a[i] <- runif(1,0.5,1)
}
}
transf_a
transf_a <- NA
for (i in 1: length(domain_labels)){
if (domain_labels[i] == 0){
transf_a[i] <- runif(1,0,0.5)
}else{
transf_a[i] <- runif(1,0.5,1)
}
}
transf_a
transf_a <- NA
for (i in 1: length(domain_labels)){
if (domain_labels[i] == 0){
transf_a[i] <- runif(1,0,0.499999)
}else{
transf_a[i] <- runif(1,0.5,1)
}
}
check_df <- rbind(domain_labels,transf_a)
View(check_df)
check_df <- cbind(domain_labels,transf_a)
View(check_df)
cor(domain_labels,transf_a)
summary(glm(domain_labels~transf_a,data=check_df,family=binomial))
check_df <- data.frame(cbind(domain_labels,transf_a))
cor(domain_labels,transf_a)
summary(glm(domain_labels~transf_a,data=check_df,family=binomial))
View(check_df)
check_df <- data.frame(cbind(as.factor(domain_labels),transf_a))
summary(glm(domain_labels~transf_a,data=check_df,family=binomial))
cor(domain_labels,transf_a)
domain_labels
check_df$V1
check_df <- data.frame(cbind(as.factor(domain_labels)-1,transf_a))
check_df <- data.frame(cbind(as.factor(domain_labels),transf_a))
cor(domain_labels,transf_a)
summary(glm(domain_labels~transf_a,data=check_df,family=binomial))
transf_a
min(transf_a)
max(transf_a)
summary(glm(domain_labels~transf_a,data=check_df,family=binomial))
check_df
summary(glm(V1~transf_a,data=check_df,family=binomial))
domain_labels
as.factor(domain_labels)
check_df <- data.frame(cbind(as.factor(domain_labels),transf_a))
View(check_df)
check_df <- data.frame(Label = domain_labels)
check_df <- data.frame(Label = domain_labels, trans_f_a = transf_a )
cor(domain_labels,transf_a)
View(check_df)
summary(glm(Label~trans_f_a,data=check_df,family=binomial))
colnames(check_df)
check_df <- data.frame(Label = as.factor(domain_labels), trans_f_a = transf_a )
check_df <- data.frame(Label = as.factor(domain_labels), trans_f_a = transf_a )
check_df$Label
summary(glm(Label~trans_f_a,data=check_df,family=binomial))
check_df
check_df <- data.frame(Label = as.factor(domain_labels), var = transf_a )
cor(domain_labels,transf_a)
summary(glm(Label~trans_f_a,data=check_df,family=binomial))
summary(glm(Label~var,data=check_df,family=binomial))
check_df <- data.frame(Label = as.factor(domain_labels), var = round(transf_a,3) )
cor(domain_labels,transf_a)
summary(glm(Label~var,data=check_df,family=binomial))
check_df <- data.frame(Label = as.factor(domain_labels), var = round(transf_a,3)*10 )
cor(domain_labels,transf_a)
summary(glm(Label~var,data=check_df,family=binomial))
plot(check_df$var,check_df$Label)
cor.test( domain_labels,transf_a)
cor(domain_labels,transf_a)
summary(glm(Label~var,data=check_df,family=binomial))
View(check_df)
exp(407.6 )
exp(407.6)
summary(glm(Label~var,data=check_df,family=binomial))
check_df <- data.frame(Label = as.factor(domain_labels), var = round(transf_a,3)*10+30 )
cor.test( domain_labels,transf_a)
summary(glm(Label~var,data=check_df,family=binomial))
plot(check_df$var,check_df$Label)
exp(407.6)
check_df <- data.frame(Label = as.factor(domain_labels), var = transf_a)
cor.test( domain_labels,transf_a)
summary(glm(Label~var,data=check_df,family=binomial))
plot(check_df$var,check_df$Label)
exp(407.6)
source("TAKI_Ultility.R")
proj_dir  <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/Intermediate_Results/Prediction_results0806/"
reclass_res <- compute_IDI_NRI_func(perf_dir,baseline_model_file,comprison_model_file1,cutoff = c(0,0.5,1))
setwd("~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code")
source("TAKI_Ultility.R")
proj_dir  <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/Intermediate_Results/Prediction_results0806/"
###############################################################
#2. For MAKE, compare models with IDI, NRI
###############################################################
#1.UK
perf_dir <- paste0(proj_dir,"CV_performance/make120_drop50/")
baseline_method <- "LogReg"
baseline_model_file  <- paste0("/KDIGO/Prediction_",baseline_method,".csv")
comprison_model_file1 <- "/SelectedClinicalFeature14Vars/Prediction_RF.csv"
reclass_res <- compute_IDI_NRI_func(perf_dir,baseline_model_file,comprison_model_file1,cutoff = c(0,0.5,1))
View(reclass_res)
reclass_res <- compute_IDI_NRI_func(perf_dir,baseline_model_file,comprison_model_file1,cutoff = c(0,0.5,1))
source("TAKI_Ultility.R")
proj_dir  <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/Intermediate_Results/Prediction_results0806/"
reclass_res <- compute_IDI_NRI_func(perf_dir,baseline_model_file,comprison_model_file1,cutoff = c(0,0.5,1))
source('~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R')
reclass_res <- compute_IDI_NRI_func(perf_dir,baseline_model_file,comprison_model_file1,cutoff = c(0,0.5,1))
1056/4792
source('~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R')
reclass_res <- compute_IDI_NRI_func(perf_dir,baseline_model_file,comprison_model_file1,cutoff = c(0,0.5,1))
source('~/Desktop/DrChen_Projects/All_AKI_Projects/Other_Project/TAKI_Project/TAKI_Code/TAKI_Ultility.R')
reclass_res <- compute_IDI_NRI_func(perf_dir,baseline_model_file,comprison_model_file1,cutoff = c(0,0.5,1))
1056/4972
